
# Generated by Qodo Gen
from original_price_calc import calculate_discount


# Dependencies:
# pip install pytest-mock
import pytest

class TestCalculateDiscount:

    # Calculate price with no discount and no tax
    def test_no_discount_no_tax(self, mocker):
        # Arrange
        mock_logger = mocker.patch('logging.info')
        price = 100.0
        discount = 0.0
    
        # Act
        result = calculate_discount(price, discount)
    
        # Assert
        assert result == 100.0
        mock_logger.assert_called_once_with("Calculated final price: 100.0")

    # Handle price of 0
    def test_zero_price(self, mocker):
        # Arrange
        mock_logger = mocker.patch('logging.info')
        price = 0.0
        discount = 0.2
        tax_rate = 0.1
    
        # Act
        result = calculate_discount(price, discount, tax_rate)
    
        # Assert
        assert result == 0.0
        mock_logger.assert_called_once_with("Calculated final price: 0.0")